package eplccode

import (
	"fmt"
	"os"
	"strings"
)

func CreateLable(index uint, text string) Lable {
	return Lable{index, text}
}
type Lable struct {
	index uint
	text string
}
func (l *Lable) asString() string {
	return fmt.Sprintf("L%d: %s\n", l.index, l.text)
}

type Writer struct {
	Fname string
	targetFile *os.File
	TargetName string
	Labels []Lable
}

func (w *Writer) InitializeWriter() {
	w.TargetName = strings.Split(w.Fname, ".")[0]+".bin"
	 file, _ := os.Create(w.TargetName)
	_, _ = file.WriteString("#Generated by epl compiler\n")
	 w.targetFile = file
}

func (w *Writer) WriteToTarget() {
	for _, lb := range w.Labels {
		_, _ = w.targetFile.WriteString(lb.asString())
	}
}

func (w *Writer) UpdateLabels(labels []Lable) {
	for _, lb := range labels{
		w.Labels = append(w.Labels, lb)
	}
}
